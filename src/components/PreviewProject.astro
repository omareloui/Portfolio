---
import GradientTitle from "@components/GradientTitle.astro";
import Divider from "@components/Divider.astro";

export interface Props {
  project: {
    title: string;
    subtitle: string;
    description: string;
    link?: string;
    github?: string;
    design?: string;
    images: string[];
    technologies: string[];
  };
}

const {
  project: {
    title,
    subtitle,
    description,
    technologies,
    images,
    link,
    design,
    github,
  },
} = Astro.props;
---

<div class="project">
  <GradientTitle class="title">{title}</GradientTitle>
  <div class="body">
    <div
      class:list={["images", { "images--only-one": images.length === 1 }]}
      data-images-srcs={images.join(",")}
    >
      {
        images
          .slice(0, 2)
          .reverse()
          .map(img => <img src={img} alt={`Image for ${title}.`} />)
      }
    </div>

    <div class="subtitle">{subtitle}</div>

    <div class="links">
      {link && <a href={link}>live site</a>}
      {github && <a href={github}>github</a>}
      {design && <a href={design}>design</a>}
    </div>

    <div class="description">{description}</div>

    <Divider />

    <div class="technologies">
      {
        technologies.map(tech => (
          <div class="technology">
            <img src={`/icons/tech/${tech}.svg`} />
          </div>
        ))
      }
    </div>
  </div>
</div>

<script>
  const images = document.querySelectorAll(".project .images");

  images.forEach(images => {
    images.addEventListener("click", e => {
      const target = e.target as HTMLElement;
      const imagesDiv = getClickedImagesDiv(target);
      const srcs = (imagesDiv.dataset.imagesSrcs as string).split(",");

      const OpenGalleryEvent = new CustomEvent("opengallery", {
        detail: srcs,
      });
      dispatchEvent(OpenGalleryEvent);
    });
  });

  function getClickedImagesDiv(el: HTMLElement): HTMLElement {
    if (el.classList.contains("images")) return el;
    return el.parentElement as HTMLElement;
  }
</script>

<style lang="scss">
  @use "../assets/styles/mixins.scss" as *;

  .project {
    --overlap: 20px;

    display: grid;
    grid-template-rows: auto var(--overlap) auto;

    @include tablet-up {
      --overlap: 32px;
    }

    .title,
    .body {
      grid-column: 1/-1;
    }

    .title {
      grid-row: 1/3;
    }
    .body {
      grid-row: 2/-1;
    }

    // Body {{{
    .body {
      padding: 30px 20px;
      width: 90%;
      margin: auto;
      background: var(--blur-surface3);
      backdrop-filter: blur(7px);
      border-radius: 20px;

      @include desktop-up {
        display: grid;
        gap: 20px;
        grid-template-columns: 1.2fr 1fr;
        padding-inline: 40px;
        grid-template-areas:
          "subtitle image"
          "desc image"
          "link image"
          "divider image"
          "tech image";
      }

      // Images {{{
      .images {
        grid-area: image;
        width: 85%;
        margin: 20px auto;
        border-radius: 12px;
        display: grid;
        position: relative;
        aspect-ratio: 9 / 6;

        &::before {
          content: "";
          @include size(100%);
          position: absolute;
          inset: 0;
          border-radius: inherit;
          background: linear-gradient(
            -45deg,
            hsl(20deg 90% 80% / 0.6),
            hsl(60deg 90% 80% / 0.6)
          );
          border-radius: inherit;
          transition: 1s var(--main-timing-function);
        }

        img {
          grid-column: 1 / -1;
          grid-row: 1 / -1;
          place-self: center;

          cursor: pointer;

          @include size(100%);
          @include w(max 85%);

          @include h(max 80%);
          object-fit: cover;
          isolation: isolate;
          transition: 1s var(--main-timing-function);
          border-radius: inherit;
          filter: drop-shadow(2px 2px 2px var(--boxshadow1));
        }

        &:not(.images--only-one) {
          img:nth-of-type(2) {
            translate: -2% 5%;
          }
          img:nth-of-type(1) {
            translate: 4% -5%;
            opacity: 0.7;
          }
        }

        &:hover {
          &::before {
            scale: 0.7;
            translate: 14% -9%;
          }
          img {
            filter: drop-shadow(10px 10px 30px var(--boxshadow1));
            &:nth-of-type(2) {
              scale: 1.03;
              translate: -3% 7%;
            }
            &:nth-of-type(1) {
              scale: 0.9;
              translate: 8% -4%;
            }
          }
        }
      }
      // }}}

      // Subtitle {{{
      .subtitle {
        text-align: center;
        font-style: italic;
        color: var(--subtext0);
        @include desktop-up {
          text-align: start;
        }
      }
      // }}}

      // Links {{{
      .links {
        grid-area: link;
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        place-items: center;
        place-content: center;
        font-weight: bold;
        margin-block: 20px;
        font-size: 1.1rem;

        a {
          text-decoration-thickness: 2px;
        }

        @include desktop-up {
          place-content: start;
          gap: 20px;
          margin-block: 0px;
        }
      }
      // }}}

      // Description {{{
      .description {
        grid-area: desc;
        text-align: center;
        @include desktop-up {
          text-align: start;
        }
      }
      // }}}

      // Divider {{{
      hr {
        @include desktop-up {
          grid-area: divider;
          margin: 0;
        }
      }
      // }}}

      // Technologies {{{
      .technologies {
        grid-area: tech;
        display: flex;
        flex-wrap: wrap;
        place-content: center;
        gap: 8px;

        .technology {
          @include size(40px);
          display: block;
          padding: 5px;
          border-radius: 50%;
          transition: scale 200ms ease-in-out;

          @include gradient-shadow;

          img {
            @include size(100%);
          }

          &:hover,
          &:focus {
            scale: 1.1;
          }
        }

        @include desktop-up {
          gap: 15px;
          justify-content: start;
          img {
            @include size(55px);
          }
        }
      }
      // }}}
    }
    // }}}
  }
</style>
